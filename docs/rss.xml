<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>千金散尽还复来</title><link>https://liuyang-f.github.io</link><description>探索未知的世界</description><copyright>千金散尽还复来</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://liuyang-f.github.io</link></image><lastBuildDate>Thu, 25 Apr 2024 10:57:26 +0000</lastBuildDate><managingEditor>千金散尽还复来</managingEditor><ttl>60</ttl><webMaster>千金散尽还复来</webMaster><item><title>一个工具：音频、视屏转文字</title><link>https://liuyang-f.github.io/post/yi-ge-gong-ju-%EF%BC%9A-yin-pin-%E3%80%81-shi-ping-zhuan-wen-zi.html</link><description>项目地址：【[stt](https://github.com/jianchang512/stt)】&#13;
&#13;
需要部署，完成后可以本地使用，windows 下尝试一遍，具体步骤如下：&#13;
&#13;
1、使用 git 命令下载项目&#13;
&#13;
2、创建 python 的虚拟环境，使用命令 `python -m venv venv`&#13;
（1）命令 `python -m venv` 用于创建 python 虚拟环境，第二个参数 `venv` 会创建一个目录；&#13;
（2）不是很懂 python 的虚拟环境，简单了解了下；简单来说，就是每个 python 项目都有自己的依赖包，很有可能依赖包的版本不一样，此时创建一个独立的 python 环境，在这个环境中随意折腾 python 包，彼此之间就不会影响；有点虚拟机的感觉；&#13;
（3）执行上面的命令后，会生成一个目录 `venv`，进入这个目录，执行 `ls` 显示如下：&#13;
![image](https://github.com/liuyang-f/liuyang-f.github.io/assets/43442770/f80cf274-cae4-41db-b527-013e75215028)&#13;
&#13;
3、进入（激活）虚拟环境&#13;
在创建的目录  `venv` 中，直接执行 `.\scripts\activate` 即可进入虚拟环境；退出虚拟环境，使用命令 `deactivate`；进入后终端会有个标识，类似这样；&#13;
![image](https://github.com/liuyang-f/liuyang-f.github.io/assets/43442770/51d6ad47-6efe-42d7-8c6e-53c912efd2d1)&#13;
&#13;
4、安装依赖&#13;
（1）使用 `git clone` 下载的项目中，有个一个文件 `requirements.txt`，同时在项目目录中按照教程执行命令 `pip install -r requirements.txt`后，发现无法存在版本冲突报错；尝试了命令 `pip install -r requirements.txt --no-deps`，还是不行；怎么办，此路不通，只好另寻他法；&#13;
（2）找到了一个救星 `pipreqs `；使用命令 `pip install pipreqs` 成功安装后，然后再项目的根目录下执行 `pipreqs `，此时会提醒 `requirements.txt` 文件已经存在；简单，把原项目的 `requirements.txt` 文件改个名字，然后执行命令  `pipreqs `，生成新的文件 `requirements.txt`；&#13;
（3）接下来就简单了，执行命令 `pip install -r requirements.txt` 成功安装；使用命令 `python  start.py` 可以正常运行，并且弹出一个浏览器窗口；&#13;
&#13;
5、下载模型包&#13;
测试了 base、small 和 medium 三种模型；base效果比较差，small 和 medium 效果差不多；&#13;
&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://liuyang-f.github.io/post/yi-ge-gong-ju-%EF%BC%9A-yin-pin-%E3%80%81-shi-ping-zhuan-wen-zi.html</guid><pubDate>Tue, 23 Apr 2024 08:33:29 +0000</pubDate></item><item><title>一些好用的软件工具</title><link>https://liuyang-f.github.io/post/yi-xie-hao-yong-de-ruan-jian-gong-ju.html</link><description>近期收录的资源网站：【[https://tuostudy.com](https://tuostudy.com)】&#13;
&#13;
### **1、windows 磁盘分析工具 SpaceSniffer【[下载链接](https://www.fosshub.com/SpaceSniffer.html)】**&#13;
每次一看自己的 C 盘满了，想着删点东西吧，无奈不知道哪个目录和应用占用的最多，这下可有办法了！&#13;
&#13;
### **2、windows 文件搜索工具 Everything 【[下载链接](https://www.voidtools.com/zh-cn/downloads)】**&#13;
文件搜索神器！&#13;
&#13;
### **3、PDF 转换工具 PDFgear【[下载链接](https://www.pdfgear.com/zh/)】**&#13;
PDF 与 Word、PPT、Excel、PNG、网页、XML 之间互相转换。</description><guid isPermaLink="true">https://liuyang-f.github.io/post/yi-xie-hao-yong-de-ruan-jian-gong-ju.html</guid><pubDate>Tue, 02 Apr 2024 07:24:05 +0000</pubDate></item><item><title>修复老照片的AI工具</title><link>https://liuyang-f.github.io/post/xiu-fu-lao-zhao-pian-de-AI-gong-ju.html</link><description>原文链接：【[链接一](https://www.freedidi.com/11907.html)】【[链接二](https://www.freedidi.com/7749.html)】&#13;
&#13;
**方案一：免费的修复平台，优点是即开即用，完全免费，缺点是速度有点慢，功能有限。</description><guid isPermaLink="true">https://liuyang-f.github.io/post/xiu-fu-lao-zhao-pian-de-AI-gong-ju.html</guid><pubDate>Thu, 28 Mar 2024 16:51:43 +0000</pubDate></item><item><title>使用GPT-3.5生成思维导图的方法</title><link>https://liuyang-f.github.io/post/shi-yong-GPT-3.5-sheng-cheng-si-wei-dao-tu-de-fang-fa.html</link><description># 步骤1:&#13;
&#13;
输入这行prompt：**创建[您的主题]的思维导图。</description><guid isPermaLink="true">https://liuyang-f.github.io/post/shi-yong-GPT-3.5-sheng-cheng-si-wei-dao-tu-de-fang-fa.html</guid><pubDate>Thu, 28 Mar 2024 06:47:03 +0000</pubDate></item><item><title>STL中的16种容器</title><link>https://liuyang-f.github.io/post/STL-zhong-de-16-zhong-rong-qi.html</link><description>_**原文链接：【[点击跳转](https://zhuanlan.zhihu.com/p/542115773)】**_&#13;
&#13;
### **5种顺序容器+3种容器适配器+8种关联容器**&#13;
&gt; 顺序容器：array、vector、deque、list、forward_list。</description><guid isPermaLink="true">https://liuyang-f.github.io/post/STL-zhong-de-16-zhong-rong-qi.html</guid><pubDate>Wed, 27 Mar 2024 08:21:35 +0000</pubDate></item></channel></rss>